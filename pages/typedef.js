import { useState } from 'react'
import { generateTypedef } from '@/helper/helper'
import Navbar from '@/component/Navbar'
import DataInputField from '@/component/DataInputField'
import CodeOutputPane from '@/component/CodeOutputPane'
import { initialData } from '@/constant/static'

export default function TypedefEditor() {
  const [jsonText, setJsonText] = useState(initialData)
  const [typedef, setTypedef] = useState('')
  const [error, setError] = useState('')

  const handleConvert = () => {
    try {
      const obj = JSON.parse(jsonText)
      setTypedef(generateTypedef(obj, 'AutogeneratedMainType'))
      setError('')
    } catch (e) {
      setError('⚠️ Invalid JSON: ' + e.message)
      setTypedef('')
    }
  }

  return (
    <>
      <Navbar />
      <div className="flex h-[calc(100vh-4rem)] space-x-4 p-4">
        <DataInputField
          title="JSON"
          value={jsonText}
          onChange={e => setJsonText(e.target.value)}
          onConvert={handleConvert}
          error={error}
        />

        <CodeOutputPane
          title="GRAPHQL"
          code={typedef}
          placeholder="// click Convert to generate SDL"
          copyText={typedef}
        />
      </div>
    </>
  )
}
